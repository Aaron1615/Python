class BinaryTree:
    
    def __init__(self, root_node = None):
        self.root = root_node
    
    def size(self,root):
    """Returns the number of child nodes the root has including the root itself."""
        if root == None:
            return 0
        else:
            return (self.size(root.left_child) + 1 + self.size(root.right_child)) 
        
    def find_kth_largest(self,root,k):
        """Returns the kth largest node in the binary tree."""
        if root == None:
            return None
        if k == (self.size(root) - self.size(root.left_child)):
            return root
        elif k < (self.size(root) - self.size(root.left_child)):
            return self.find_kth_largest(root.right_child,k)
        else:
            return self.find_kth_largest(root.left_child, k-(self.size(root) - self.size(root.left_child)))
